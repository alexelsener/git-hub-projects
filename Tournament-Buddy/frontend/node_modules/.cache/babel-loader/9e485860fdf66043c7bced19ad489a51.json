{"remainingRequest":"C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\src\\views\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\src\\views\\Login.vue","mtime":1586177762090},{"path":"C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBhdXRoIGZyb20gJy4uL2F1dGgnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2xvZ2luJywKICBjb21wb25lbnRzOiB7fSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdXNlcjogewogICAgICAgIHVzZXJuYW1lOiAnJywKICAgICAgICBwYXNzd29yZDogJycKICAgICAgfSwKICAgICAgaW52YWxpZENyZWRlbnRpYWxzOiBmYWxzZQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGxvZ2luOiBmdW5jdGlvbiBsb2dpbigpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGZldGNoKCIiLmNvbmNhdChwcm9jZXNzLmVudi5WVUVfQVBQX1JFTU9URV9BUEksICIvbG9naW4iKSwgewogICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgIEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJwogICAgICAgIH0sCiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkodGhpcy51c2VyKQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGlmIChyZXNwb25zZS5vaykgewogICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLnRleHQoKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX3RoaXMuaW52YWxpZENyZWRlbnRpYWxzID0gdHJ1ZTsKICAgICAgICB9CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHRva2VuKSB7CiAgICAgICAgaWYgKHRva2VuICE9IHVuZGVmaW5lZCkgewogICAgICAgICAgaWYgKHRva2VuLmluY2x1ZGVzKCciJykpIHsKICAgICAgICAgICAgdG9rZW4gPSB0b2tlbi5yZXBsYWNlKC8iL2csICcnKTsKICAgICAgICAgIH0KCiAgICAgICAgICBhdXRoLnNhdmVUb2tlbih0b2tlbik7CgogICAgICAgICAgX3RoaXMuJHJvdXRlci5wdXNoKCcvJyk7CiAgICAgICAgfQogICAgICB9KVsiY2F0Y2giXShmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgcmV0dXJuIGNvbnNvbGUuZXJyb3IoZXJyKTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,OAAA,IAAA,MAAA,SAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,UAAA,EAAA,EAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AACA,QAAA,QAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA;AAFA,OADA;AAKA,MAAA,kBAAA,EAAA;AALA,KAAA;AAOA,GAXA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,KADA,mBACA;AAAA;;AACA,MAAA,KAAA,WAAA,OAAA,CAAA,GAAA,CAAA,kBAAA,aAAA;AACA,QAAA,MAAA,EAAA,MADA;AAEA,QAAA,OAAA,EAAA;AACA,UAAA,MAAA,EAAA,kBADA;AAEA,0BAAA;AAFA,SAFA;AAMA,QAAA,IAAA,EAAA,IAAA,CAAA,SAAA,CAAA,KAAA,IAAA;AANA,OAAA,CAAA,CAQA,IARA,CAQA,UAAA,QAAA,EAAA;AACA,YAAA,QAAA,CAAA,EAAA,EAAA;AACA,iBAAA,QAAA,CAAA,IAAA,EAAA;AACA,SAFA,MAEA;AACA,UAAA,KAAA,CAAA,kBAAA,GAAA,IAAA;AACA;AACA,OAdA,EAeA,IAfA,CAeA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,IAAA,SAAA,EAAA;AACA,cAAA,KAAA,CAAA,QAAA,CAAA,GAAA,CAAA,EAAA;AACA,YAAA,KAAA,GAAA,KAAA,CAAA,OAAA,CAAA,IAAA,EAAA,EAAA,CAAA;AACA;;AACA,UAAA,IAAA,CAAA,SAAA,CAAA,KAAA;;AACA,UAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,GAAA;AACA;AACA,OAvBA,WAwBA,UAAA,GAAA;AAAA,eAAA,OAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AAAA,OAxBA;AAyBA;AA3BA;AAZA,CAAA","sourcesContent":["<template>\r\n  <div id=\"login\" class=\"text-center\">\r\n    <form class=\"form-signin\" @submit.prevent=\"login\">\r\n      <h1 class=\"h3 mb-3 font-weight-normal\">Please Sign In</h1>\r\n      <div class=\"alert alert-danger\" role=\"alert\" v-if=\"invalidCredentials\">\r\n        Invalid username and password!\r\n      </div>\r\n      <div class=\"alert alert-success\" role=\"alert\" v-if=\"this.$route.query.registration\">\r\n        Thank you for registering, please sign in.\r\n      </div>\r\n      <label for=\"username\" class=\"sr-only\">Username</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"username\"\r\n        class=\"form-control\"\r\n        placeholder=\"Username\"\r\n        v-model=\"user.username\"\r\n        required\r\n        autofocus\r\n      />\r\n      <label for=\"password\" class=\"sr-only\">Password</label>\r\n      <input\r\n        type=\"password\"\r\n        id=\"password\"\r\n        class=\"form-control\"\r\n        placeholder=\"Password\"\r\n        v-model=\"user.password\"\r\n        required\r\n      />\r\n      <router-link :to=\"{ name: 'register' }\">Need an account?</router-link>\r\n      <button type=\"submit\">Sign in</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport auth from '../auth';\r\n\r\nexport default {\r\n  name: 'login',\r\n  components: {},\r\n  data() {\r\n    return {\r\n      user: {\r\n        username: '',\r\n        password: '',\r\n      },\r\n      invalidCredentials: false,\r\n    };\r\n  },\r\n  methods: {\r\n    login() {\r\n      fetch(`${process.env.VUE_APP_REMOTE_API}/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(this.user),\r\n      })\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            return response.text();\r\n          } else {\r\n            this.invalidCredentials = true;\r\n          }\r\n        })\r\n        .then((token) => {\r\n          if (token != undefined) {\r\n            if (token.includes('\"')) {\r\n              token = token.replace(/\"/g, '');\r\n            }\r\n            auth.saveToken(token);\r\n            this.$router.push('/');\r\n          }\r\n        })\r\n        .catch((err) => console.error(err));\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n"],"sourceRoot":"src/views"}]}