{"remainingRequest":"C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\src\\views\\Register.vue?vue&type=style&index=0&id=63ae9146&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\src\\views\\Register.vue","mtime":1587068800813},{"path":"C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCiNlcnJvcnMgew0KICBjb2xvcjogZmlyZWJyaWNrOw0KfQ0K"},{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgJA;AACA;AACA","file":"Register.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <v-card width=\"500\" id=\"register\" class=\"mx-auto mt-5 at-5\">\r\n    <v-card-title>\r\n      <h1 class=\"h3 mb-3 font-weight-normal\">Create Account</h1>\r\n    </v-card-title>\r\n    <v-card-text>\r\n      <v-form ref=\"registrationForm\">\r\n        <v-text-field\r\n          v-model=\"user.firstName\"\r\n          label=\"First Name\"\r\n          prepend-icon=\"mdi-account-circle\"\r\n          :rules=\"firstNameRules\"\r\n        />\r\n        <v-text-field\r\n          v-model=\"user.lastName\"\r\n          label=\"Last Name\"\r\n          prepend-icon=\"mdi-account-circle\"\r\n          :rules=\"lastNameRules\"\r\n        />\r\n        <v-text-field\r\n          v-model=\"user.username\"\r\n          label=\"Username\"\r\n          prepend-icon=\"mdi-account-circle\"\r\n          :rules=\"usernameRules\"\r\n        />\r\n        <v-text-field\r\n          v-model=\"user.email\"\r\n          type=\"text\"\r\n          label=\"Email\"\r\n          prepend-icon=\"mdi-email\"\r\n          :rules=\"emailRules\"\r\n        />\r\n        <v-text-field\r\n          v-model=\"user.password\"\r\n          :type=\"showPassword ? 'text' : 'password'\"\r\n          label=\"Password\"\r\n          prepend-icon=\"mdi-lock\"\r\n          :append-icon=\"showPassword ? 'mdi-eye' : 'mdi-eye-off'\"\r\n          @click:append=\"showPassword = !showPassword\"\r\n          :rules=\"passwordRules\"\r\n          error-count=\"5\"\r\n        />\r\n        <v-text-field\r\n          v-model=\"user.confirmPassword\"\r\n          :type=\"showConfirmPassword ? 'text' : 'password'\"\r\n          label=\"Please Confirm Your Password\"\r\n          prepend-icon=\"mdi-lock\"\r\n          :append-icon=\"showConfirmPassword ? 'mdi-eye' : 'mdi-eye-off'\"\r\n          @click:append=\"showConfirmPassword = !showConfirmPassword\"\r\n          :rules=\"confirmPasswordRules\"\r\n          @keydown.enter=\"register\"\r\n        />\r\n      </v-form>\r\n      <div id=\"errors\" v-for=\"error in errors\" :key=\"error\">{{error}}</div>\r\n    </v-card-text>\r\n    <v-divider></v-divider>\r\n    <v-card-actions>\r\n      <v-btn outlined color=\"#BB86FC\" :to=\"{ name: 'login' }\">Already Have an Account?</v-btn>\r\n      <v-spacer></v-spacer>\r\n      <v-btn outlined color=\"#03DAC5\" type=\"submit\" @click=\"register\">Register</v-btn>\r\n    </v-card-actions>\r\n  </v-card>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"register\",\r\n  data() {\r\n    return {\r\n      user: {\r\n        username: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        role: \"user\"\r\n      },\r\n      usernameRules: [v => !!v || \"Username is required.\"],\r\n      firstNameRules: [v => !!v || \"First Name is required.\"],\r\n      lastNameRules: [v => !!v || \"Last Name is required.\"],\r\n      emailRules: [\r\n        v => !!v || \"E-mail is required.\",\r\n        v => /.+@.+\\..+/.test(v) || \"E-mail must be valid.\"\r\n      ],\r\n      passwordRules: [\r\n        v => !!v || \"Password is required.\",\r\n        v => v.length >= 8 || \"Password must be at least 8 characters.\",\r\n        v =>\r\n          /(?=.*[A-Z])/.test(v) ||\r\n          \"Password must have one uppercase character.\",\r\n        v => /(?=.*\\d)/.test(v) || \"Password must have one number.\",\r\n        v =>\r\n          /([!@$%])/.test(v) ||\r\n          \"Password must have one special character. [!@$%]\"\r\n      ],\r\n      confirmPasswordRules: [\r\n        v => v === this.user.password || \"Passwords must match\"\r\n      ],\r\n      registrationErrors: false,\r\n      showPassword: false,\r\n      showConfirmPassword: false,\r\n      errors: []\r\n    };\r\n  },\r\n  methods: {\r\n    register() {\r\n      if (this.$refs.registrationForm.validate()) {\r\n        fetch(`${process.env.VUE_APP_REMOTE_API}/register`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify(this.user)\r\n        })\r\n          .then(response => {\r\n            if (response.ok) {\r\n              return response.json();\r\n            } else {\r\n              this.registrationErrors = true;\r\n              throw \"Register returned: \" + response.status;\r\n            }\r\n          })\r\n          .then(parsedData => {\r\n            if (parsedData.success) {\r\n              this.$router.push({\r\n                path: \"/login\",\r\n                query: { registration: \"success\" }\r\n              });\r\n            } else {\r\n              this.registrationErrors = true;\r\n              this.errors = parsedData.errors;\r\n            }\r\n          })\r\n          .catch(err => console.log(err));\r\n        this.$emit(\"update-user\");\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#errors {\r\n  color: firebrick;\r\n}\r\n</style>\r\n"]}]}