{"remainingRequest":"C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\src\\views\\TournamentPage.vue?vue&type=template&id=38cfce5c&","dependencies":[{"path":"C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\src\\views\\TournamentPage.vue","mtime":1586970939645},{"path":"C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}