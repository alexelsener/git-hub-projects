{"remainingRequest":"C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\src\\views\\BrowseTournaments.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\src\\views\\BrowseTournaments.vue","mtime":1586794425289},{"path":"C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Student\\workspace\\capstone-tournament_hosting\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouZWxldmF0aW9uLTV7DQogIHdpZHRoOjE1ZW07DQp9DQo="},{"version":3,"sources":["BrowseTournaments.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiJA;AACA;AACA","file":"BrowseTournaments.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <v-container>\r\n\r\n    <v-card-title large class=\"elevation-5\">Browse Tournaments</v-card-title >\r\n\r\n<v-container>\r\n  <v-row>\r\n\r\n    <v-col sm=\"1\">\r\n      <p>Filter by:</p>\r\n    </v-col>\r\n<div class=\"drop\"> \r\n    <v-col>\r\n      <v-overflow-btn \r\n        class=\"elevation-5\"\r\n        :items=\"dropdown_games\"\r\n        label=\"Choose Sport\"\r\n        v-model=\"gamefilter\"\r\n        target=\"#dropdown-example\"\r\n      ></v-overflow-btn>\r\n    </v-col>\r\n</div>\r\n\r\n  </v-row>\r\n  <p>Show Closed Tournaments?</p>\r\n  <v-switch inset v-model=\"show_closed_tournaments\" :label=\"show_closed_tournaments? 'True':'False'\"></v-switch>\r\n</v-container>\r\n\r\n<v-data-table :headers=\"headers\" :items=\"sortTournaments\" class=\"elevation-10\">\r\n      <template v-slot:item=\"row\">\r\n          <tr>\r\n            <td class=\"clickable\" @click=\"$router.push('/tournament-page/' + row.item.tournamentId)\">{{row.item.tournamentName}}</td>\r\n            <td>{{row.item.game}}</td>\r\n            <td>{{row.item.startDate}}</td>\r\n            <td>{{row.item.prizeDescription}}</td>\r\n            <td >\r\n              \r\n                <join-tournament v-if=\"row.item.acceptingEntries\" :game=\"row.item.game\" :tournamentId=\"row.item.tournamentId\" @join-success=\"handleSnack()\"></join-tournament>\r\n                <v-row justify=\"center\">\r\n                <v-btn class=\"mxauto\" v-if=\"row.item.acceptingEntries===false\" disabled color=\"primary\" ><v-icon dark>mdi-send</v-icon> Join  </v-btn>\r\n               </v-row>\r\n            </td>\r\n          </tr>\r\n      </template>\r\n</v-data-table>\r\n\r\n\r\n</v-container>\r\n</template>\r\n\r\n<script>\r\nimport auth from '@/auth.js';\r\nimport JoinTournament from '@/components/JoinTournament.vue';\r\n\r\n  export default {\r\n    components:{\r\n      JoinTournament\r\n    },\r\n    data () {\r\n      return {\r\n        gamefilter:'All',\r\n        dropdown_games: ['All','Football', 'Baseball', 'Basketball', 'Volleyball', 'Super Smash']  ,\r\n        show_closed_tournaments: true,\r\n        headers: [\r\n          {\r\n            text: 'Tournament',\r\n            align: 'start',\r\n            sortable: true,\r\n            value: 'name',\r\n          },\r\n          { text: 'Game', value: 'game' },\r\n          { text: 'Start Date', value: 'date' },\r\n          { text: 'Tournament Prize', value: 'prize' },\r\n          { text: '', value: 'join' }\r\n        ],\r\n        tournaments:[{\r\n            tournamentName:'',\r\n            game:'',\r\n            tournamentBio:''\r\n        }],\r\n        captainsTeams:[{\r\n          teamName:'',\r\n          teamBio:'',\r\n          game:''          \r\n        }],\r\n        userId:'',\r\n        user: null,\r\n        snackbar: false,\r\n        snackText:'Your request has been submitted!',\r\n      }\r\n    },\r\n\r\n    computed:{\r\n        sortTournaments(){\r\n            if(this.gamefilter === \"All\" && this.show_closed_tournaments){\r\n                return this.tournaments;\r\n            } else if(this.gamefilter !== \"All\" && this.show_closed_tournaments){\r\n            return this.tournaments.filter((team)=> team.game === this.gamefilter);\r\n            } else if(this.gamefilter === \"All\" && !this.show_closed_tournaments){\r\n              return this.tournaments.filter((team)=> team.acceptingEntries === true);\r\n            } else {\r\n              return this.tournaments.filter((team)=> {\r\n                return team.acceptingEntries === true && team.game === this.gamefilter\r\n                });\r\n            }\r\n        }\r\n    },\r\n     created() {\r\n       \r\n      fetch(`${process.env.VUE_APP_REMOTE_API}/api/tournament`, {\r\n        method: 'GET',\r\n        headers: new Headers({\r\n        Authorization: 'Bearer ' + auth.getToken(),\r\n        }),\r\n        credentials: 'same-origin',\r\n        })\r\n        .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } \r\n        })\r\n        .then((data) => {\r\n          this.tournaments = data;\r\n        })\r\n        .catch((err) => console.error(err));\r\n\r\n  \r\n    },\r\n    methods:{\r\n      handleSnack(){\r\n        \r\n        this.snackbar=true;\r\n      \r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    \r\n  }\r\n</script>\r\n\r\n<style>\r\n.elevation-5{\r\n  width:15em;\r\n}\r\n</style>"]}]}